@page "/2"
@using MumbleSharp

<h1>Hello, world!</h1>

<button class="btn btn-warning" @onclick="ConnectToMumble">Click me</button>
<button class="btn btn-warning" @onclick="SendTestVoice">Send Voice</button>

@if (connection != null)
{
    <p>Mumble Connection</p>
    <p>State: @connection.State.ToString()</p>
}

@code {
    
    MumbleConnection? connection;
    MicrophoneRecorder? recorder;
    SpeakerPlayback ? playback;

    private void ConnectToMumble()
    {
        // Try and connect a mumble sharp client
        IMumbleProtocol protocol = new BasicMumbleProtocol();
        playback = new SpeakerPlayback();
        recorder = new MicrophoneRecorder(protocol);
        connection = new MumbleConnection("127.0.0.1", 64738, protocol, true);
        connection.Connect("SuperUser", "HXJ8qmCuacKh", Array.Empty<string>(), "");
        Console.WriteLine(connection.State.ToString());

        Loop();
    }

    private async Task Loop()
    {
        await Task.Delay(1000);
        try
        {
            while (connection?.State != ConnectionStates.Disconnected)
            {
                if (connection == null)
                    break;
                if (connection.Process())
                    Thread.Yield();
                else
                    await Task.Delay(1);
            }
        }
        catch (Exception e)
        {
            Console.WriteLine(e.Message);
        }
        finally
        {
            StateHasChanged();
        }
    }

    private void SendTestVoice()
    {
        if (connection == null)
        {
            return;
        }
        // Send a test voice message
        recorder?.Record();
        Thread.Sleep(1000);
        recorder?.Stop();
        
        StateHasChanged();
    }
}
