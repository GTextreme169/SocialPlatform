<div class="@Class" id="@Id" style="@Style">
    <svg class="ico-img" viewBox="0 0 100 100">
        <mask id="svgmask1">
            <square
                fill="black"
                stroke="none"
                x="0"
                y="0"
                width="100"
                height="100"/>
            <path fill="white" stroke="none" d="
                M 0,50
                Q 0,0 50,0
                T 100,50
                50,100
                0,50
                "/>

            <circle
                cx="@CalculateIndicatorX()"
                cy="@CalculateIndicatorY()"
                r="@CalculateIndicatorBorderRadius()"
                fill="@GetIndicatorBorderColor()"/>
        </mask>
        <image 
            width="100%" 
            height="100%" 
            xmlns:xlink="http://www.w3.org/1999/xlink" 
            xlink:href="_content/SocialPlatform.Client.Shared/img/placekitten-200x200.jpeg" 
            mask="url(#svgmask1)"/>
        <g>
            <circle 
                cx="@CalculateIndicatorX()" 
                cy="@CalculateIndicatorY()" 
                r="@IndicatorRadius" 
                fill="@GetStatusColor()"/>
            <text 
                x="@CalculateIndicatorX()" 
                y="@CalculateIndicatorY()" 
                dominant-baseline="central" 
                text-anchor="middle" 
                fill="white" 
                font-size="18pt"
                >@NotificationCount</text>
        </g>

    </svg>
</div>

@code {

    public enum Status
    {
        Online,
        Offline,
        Busy,
        Away,
        None
    }

    [Parameter]
    public Status MyStatus { get; set; } = Status.None;

    [Parameter] public int? NotificationCount { get; set; } = null;

    [Parameter] public string Class { get; set; } = "";
    
    [Parameter] public string Id { get; set; } = "";
    
    [Parameter] public string Style { get; set; } = "";
    
    [Parameter] public uint IndicatorRadius { get; set; } = 10;

    public string GetStatusColor()
    {
        if(MyStatus == Status.None && NotificationCount > 0)
        {
            return "Red";
        }
        return MyStatus switch
        {
            Status.Online => "Green",
            Status.Offline => "Red",
            Status.Busy => "Yellow",
            Status.Away => "Orange",
            _ => "Transparent"
        };
    }

    private string CalculateIndicatorX()
    {
        return (100 - IndicatorRadius).ToString();
    }
    
    private string CalculateIndicatorY()
    {
        return (100 - IndicatorRadius).ToString();
    }
    
    private string CalculateIndicatorBorderRadius()
    {
        return (IndicatorRadius + 5).ToString();
    }
    
    private bool ShowNotification()
    {
        return MyStatus != Status.None || NotificationCount != null;
    }

    private string GetIndicatorBorderColor()
    {
        return ShowNotification() switch
        {
            true => "black",
            false => "transparent"
        };
    }
}